root=true

[*]
tab_width = 4
indent_size = 4
indent_style = space
charset = utf-8
end_of_line = crlf
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

[*.cs]
max_line_length = 120

csharp_indent_labels = one_less_than_current
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_prefer_braces = true:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_system_threading_lock = true:suggestion
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
dotnet_sort_using_directives_alphabetically = true
csharp_space_around_binary_operators = before_and_after
csharp_using_directive_placement = outside_namespace:error

# CSharp Style Rules
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:warning

# Dotnet Analyzers Rules
dotnet_analyzer_diagnostic.category-CodeQuality.severity = warning
dotnet_analyzer_diagnostic.category-Design.severity = warning
dotnet_analyzer_diagnostic.category-Documentation.severity = warning
dotnet_analyzer_diagnostic.category-Globalization.severity = warning
dotnet_analyzer_diagnostic.category-Interoperability.severity = warning
dotnet_analyzer_diagnostic.category-Maintainability.severity = warning
dotnet_analyzer_diagnostic.category-Naming.severity = warning
dotnet_analyzer_diagnostic.category-Performance.severity = warning
dotnet_analyzer_diagnostic.category-Reliability.severity = warning
dotnet_analyzer_diagnostic.category-Security.severity = warning
dotnet_analyzer_diagnostic.category-SingleFile.severity = warning
dotnet_analyzer_diagnostic.category-Style.severity = warning
dotnet_analyzer_diagnostic.category-Usage.severity = warning

# Dotnet Diagnostic Rules

# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/
dotnet_diagnostic.CA1305.severity = silent      # Region based (localization)
dotnet_diagnostic.CA1806.severity = silent      # Ignore method results (not working properly on all cases)
dotnet_diagnostic.CA1848.severity = silent      # Logger
dotnet_diagnostic.CA2254.severity = silent      # Static string declarations

# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/
dotnet_diagnostic.IDE0010.severity = silent     # Disable all switch options
dotnet_diagnostic.IDE0011.severity = silent     # Force if braces
dotnet_diagnostic.IDE0022.severity = silent     # Use expression body
dotnet_diagnostic.IDE0042.severity = silent     # Variable deconstruction (x,y) = Foo()
dotnet_diagnostic.IDE0046.severity = silent     # Conditional return
dotnet_diagnostic.IDE0058.severity = silent     # Expression not used (boring with extension methods) _ = Foo()
dotnet_diagnostic.IDE0072.severity = silent     # Missing case switch
dotnet_diagnostic.IDE0090.severity = silent     # Constructor not typed

# Dotnet Naming Rules
dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.namespace_should_be_pascal_case.severity = warning
dotnet_naming_rule.namespace_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.namespace_should_be_pascal_case.symbols = namespace
dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_style.begins_with_i.capitalization = pascal_case
dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.required_modifiers =
dotnet_naming_symbols.namespace.applicable_accessibilities = local
dotnet_naming_symbols.namespace.applicable_kinds = namespace
dotnet_naming_symbols.namespace.required_modifiers =
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.required_modifiers =
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.required_modifiers =

# Dotnet Style Rules
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true:suggestion
csharp_style_namespace_declarations = file_scoped:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion

# Disable all checks for files inside the Migrations folder
[**/Migrations/*.cs]
generated_code = true
dotnet_diagnostic.IDE0005.severity = silent     # for some reason I have to add it manually